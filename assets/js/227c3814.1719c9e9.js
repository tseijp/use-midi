(self.webpackChunk_use_midi_docs=self.webpackChunk_use_midi_docs||[]).push([[422],{88473:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return m},metadata:function(){return p},StyledComponent:function(){return h},toc:function(){return k},SimpleExample:function(){return f},default:function(){return v}});var i,a=n(7560),o=n(98283),r=n(73182),s=(n(2784),n(30876)),d=n(52275),l=n(81697),u=["components"],c={sidebar_position:0,sidebar_label:"Introduction"},m="Introduction to React UseMidi",p={unversionedId:"intro",id:"intro",isDocsHomePage:!1,title:"Introduction to React UseMidi",description:"UseMidi is designed as a the foundation for React design systems and component libraries.",source:"@site/documents/intro.mdx",sourceDirName:".",slug:"/intro",permalink:"/use-midi/documents/intro",editUrl:"https://github.com/tseijp/use-midi/edit/master/examples/documents/intro.mdx",version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0,sidebar_label:"Introduction"},sidebar:"tutorialSidebar",next:{title:"MIDI",permalink:"/use-midi/documents/api/midi"}},h=d.ZP.div(i||(i=(0,r.Z)(["\nwidth: 100%;\nheight: 25rem;\nborder-radius: .5rem;\nbackground: pink;\ndiv {\n    width: 25rem;\n    height: 25rem;\n    color: black;\n    margin: auto;\n};\n"]))),k=[{value:"Modern React",id:"modern-react",children:[]},{value:"Modular views and behaviors",id:"modular-views-and-behaviors",children:[]},{value:"Installation",id:"installation",children:[]},{value:"Getting Started",id:"getting-started",children:[]},{value:"Simple example",id:"simple-example",children:[]}];function f(e){(0,l.iX)((function(e){e.first&&e.send([0,2184,4095],10)}));return(0,s.kt)("div",null)}var g={StyledComponent:h,toc:k,SimpleExample:f};function v(e){var t=e.components,n=(0,o.Z)(e,u);return(0,s.kt)("wrapper",(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"introduction-to-react-usemidi"},"Introduction to React UseMidi"),(0,s.kt)("p",null,"UseMidi is designed as a the foundation for React design systems and component libraries.\nIt sets you up for success in creating accesible, interactive, performant UI\nthat support the custom look and feel of you"),(0,s.kt)("h2",{id:"modern-react"},"Modern React"),(0,s.kt)("p",null,"Made with modern React APIs including function components and hooks.\nReady for use with modern React APIs including Concurrent Mode and Server Components."),(0,s.kt)("h2",{id:"modular-views-and-behaviors"},"Modular views and behaviors"),(0,s.kt)("p",null,"UseMidi exports a number of individual modules to support a variety of use cases.\nYour application can use as many or as few of these modules as needed.\nThe library is designed for incremental adoption strategies."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"// React DOM element DOES have event callback props\n<div onClick={onClick} />\n\n// UseMidi element DOES NOT have event callback props\nconst bind = useClick(state => {});\n<View {...bind()}/>\n")),(0,s.kt)("h2",{id:"installation"},"Installation"),(0,s.kt)("p",null,"To install the entire ",(0,s.kt)("inlineCode",{parentName:"p"},"use-midi")," lib:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"yarn add use-midi\n")),(0,s.kt)("h2",{id:"getting-started"},"Getting Started"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"git clone https://github.com/tseijp/use-midi\n")),(0,s.kt)("p",null,"Run the development server:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"cd use-midi\nyarn init\nyarn docs\n")),(0,s.kt)("p",null,"Your site starts at ",(0,s.kt)("a",{parentName:"p",href:"http://localhost:3000"},"http://localhost:3000"),"."),(0,s.kt)("h2",{id:"simple-example"},"Simple example"),(0,s.kt)(h,{mdxType:"StyledComponent"},(0,s.kt)(f,{mdxType:"SimpleExample"})),(0,s.kt)("p",null,"The following example makes a ",(0,s.kt)("inlineCode",{parentName:"p"},"<div/>")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"import { useNote } from 'use-midi'\n\nfunction ClickButton () {\n    const bind = useNote(state => {\n        if (state.first)\n            state.send([0x000, 0x888, 0xfff], 10)\n    })\n    return <div {...bind()}/>\n}\n")))}v.isMDXComponent=!0}}]);