(self.webpackChunk_use_midi_docs=self.webpackChunk_use_midi_docs||[]).push([[43],{2504:function(t,e,i){"use strict";i.r(e),i.d(e,{frontMatter:function(){return u},contentTitle:function(){return d},metadata:function(){return o},toc:function(){return l},default:function(){return m}});var a=i(7560),s=i(98283),n=(i(2784),i(30876)),r=["components"],u={sidebar_position:3,sidebar_label:"Midi State"},d="MIDI state",o={unversionedId:"api/state",id:"api/state",isDocsHomePage:!1,title:"MIDI state",description:"Every time a handler is called, it will get passed a midi state",source:"@site/documents/api/state.md",sourceDirName:"api",slug:"/api/state",permalink:"/use-midi/documents/api/state",editUrl:"https://github.com/tseijp/use-midi/edit/master/examples/documents/api/state.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,sidebar_label:"Midi State"},sidebar:"tutorialSidebar",previous:{title:"Midi config",permalink:"/use-midi/documents/api/config"},next:{title:"Rmaz",permalink:"/use-midi/documents/rmaz"}},l=[{value:"MIDI state attributes",id:"midi-state-attributes",children:[{value:"xxx state attributes",id:"xxx-state-attributes",children:[]}]}],c={toc:l};function m(t){var e=t.components,i=(0,s.Z)(t,r);return(0,n.kt)("wrapper",(0,a.Z)({},c,i,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"midi-state"},"MIDI state"),(0,n.kt)("p",null,"Every time a handler is called, it will get passed a midi state\nthat includes the source event and adds multiple attributes."),(0,n.kt)("h2",{id:"midi-state-attributes"},"MIDI state attributes"),(0,n.kt)("p",null,"With the exception of xy and vxvy, all attributes bellow are common to all accesses."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"const bind = useXXX(state => {\n    const {\n        xy\n    } = state\n})\n")),(0,n.kt)("h3",{id:"xxx-state-attributes"},"xxx state attributes"),(0,n.kt)("p",null,"The xxx gesture state adds a few attributes whih can help you understand the user intent."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"const bind = useXXX(state = {\n    const {\n\n    } = state\n})\n")))}m.isMDXComponent=!0}}]);