"use strict";(self.webpackChunk_use_midi_docs=self.webpackChunk_use_midi_docs||[]).push([[906],{94313:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return d},contentTitle:function(){return o},metadata:function(){return u},toc:function(){return p},default:function(){return k}});var a=n(20011),i=n(66017),l=(n(32735),n(29530)),r=["components"],d={sidebar_position:2,sidebar_label:"MIDI config"},o="MIDI Config",u={unversionedId:"api/config",id:"api/config",isDocsHomePage:!1,title:"MIDI Config",description:"React UseMidi offers different config to configure the MIDI.",source:"@site/documents/api/config.md",sourceDirName:"api",slug:"/api/config",permalink:"/use-midi/documents/api/config",editUrl:"https://github.com/tseijp/use-midi/edit/master/examples/documents/api/config.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"MIDI config"},sidebar:"defaultSidebar",previous:{title:"MIDI",permalink:"/use-midi/documents/api/apis"},next:{title:"Midi state",permalink:"/use-midi/documents/api/state"}},p=[{value:"Shared Shared config",id:"shared-shared-config",children:[],level:2},{value:"MIDI config",id:"midi-config-1",children:[],level:2},{value:"Structure of the config object",id:"structure-of-the-config-object",children:[],level:2},{value:"Binding special config",id:"binding-special-config",children:[],level:2}],m={toc:p};function k(t){var e=t.components,n=(0,i.Z)(t,r);return(0,l.kt)("wrapper",(0,a.Z)({},m,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"midi-config"},"MIDI Config"),(0,l.kt)("p",null,"React ",(0,l.kt)("inlineCode",{parentName:"p"},"UseMidi")," offers different config to configure the MIDI."),(0,l.kt)("h2",{id:"shared-shared-config"},"Shared Shared config"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Config"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"enabled")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"True when the Midi is active")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"sysex")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"True when use the sysex option requesting MIDI access")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"debug")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"True when use debug mode")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"target")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"null")),(0,l.kt)("td",{parentName:"tr",align:null},"Raw Midi Event Object")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"device")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"'pointer'")),(0,l.kt)("td",{parentName:"tr",align:null},"Select MIDI Device Key")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"port")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"'default'")),(0,l.kt)("td",{parentName:"tr",align:null},"Select input and output port key")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"input")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"'default'")),(0,l.kt)("td",{parentName:"tr",align:null},"Select input port key")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"output")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"'default'")),(0,l.kt)("td",{parentName:"tr",align:null},"Select output port key")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"data")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"null")),(0,l.kt)("td",{parentName:"tr",align:null},"Default number of delay time stamp when send.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"delay")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"null")),(0,l.kt)("td",{parentName:"tr",align:null},"Default number of delay time stamp when send.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"command")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"null")),(0,l.kt)("td",{parentName:"tr",align:null},"Default number of recieved Midi command code.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"channel")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"null")),(0,l.kt)("td",{parentName:"tr",align:null},"Default number of recieved Midi channel number.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"note")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"null")),(0,l.kt)("td",{parentName:"tr",align:null},"Default number of Midi note number if recieved.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"args")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"null")),(0,l.kt)("td",{parentName:"tr",align:null},"Default arguments when you bind.")))),(0,l.kt)("h2",{id:"midi-config-1"},"MIDI config"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Config"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"enable")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"True when the Midi is active")))),(0,l.kt)("h2",{id:"structure-of-the-config-object"},"Structure of the config object"),(0,l.kt)("p",null,"Depending on whether you suse midi hooks or if you use the ",(0,l.kt)("inlineCode",{parentName:"p"},"useMidi")," hook,\nyou will need to structure the config object differently."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"useFade(state => {}, {...sharedConfig, ...fadeConfig})\n\nuseMidi({fade: state => {}}, {...sharedConfig, fade: fadeConfig})\n")),(0,l.kt)("h2",{id:"binding-special-config"},"Binding special config"),(0,l.kt)("p",null,"You can override config using first argument of bind."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const bind = useNote(() => {}, {channel: 0, note: 0})\n\nreturn (\n  <>\n    It is written using shorthands.\n    <button {...bind(() => 1)} />\n    <button {...bind(() => [1])} />\n    <button {...bind(() => [1, 1])} />\n    It means the same.\n    <button {...bind(() => ({note: 1}))} />\n    <button {...bind(() => ({channel: 1}))} />\n    <button {...bind(() => ({channel: 1, note: 1}))} />\n  </>\n)\n")))}k.isMDXComponent=!0}}]);