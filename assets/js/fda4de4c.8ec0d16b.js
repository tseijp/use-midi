"use strict";(self.webpackChunk_use_midi_docs=self.webpackChunk_use_midi_docs||[]).push([[906],{94313:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return d},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return c},default:function(){return p}});var i=n(20011),a=n(66017),r=(n(32735),n(29530)),o=["components"],d={sidebar_position:2,sidebar_label:"MIDI config"},l="MIDI Config",u={unversionedId:"api/config",id:"api/config",isDocsHomePage:!1,title:"MIDI Config",description:"React UseMidi offers different config to configure the MIDI.",source:"@site/documents/api/config.md",sourceDirName:"api",slug:"/api/config",permalink:"/use-midi/documents/api/config",editUrl:"https://github.com/tseijp/use-midi/edit/master/examples/documents/api/config.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"MIDI config"},sidebar:"defaultSidebar",previous:{title:"MIDI",permalink:"/use-midi/documents/api/apis"},next:{title:"Midi state",permalink:"/use-midi/documents/api/state"}},c=[{value:"Shared Shared config",id:"shared-shared-config",children:[],level:2},{value:"MIDI config",id:"midi-config-1",children:[],level:2},{value:"Structure of the config object",id:"structure-of-the-config-object",children:[],level:2},{value:"Binding special config",id:"binding-special-config",children:[],level:2}],s={toc:c};function p(e){var t=e.components,n=(0,a.Z)(e,o);return(0,r.kt)("wrapper",(0,i.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"midi-config"},"MIDI Config"),(0,r.kt)("p",null,"React ",(0,r.kt)("inlineCode",{parentName:"p"},"UseMidi")," offers different config to configure the MIDI."),(0,r.kt)("h2",{id:"shared-shared-config"},"Shared Shared config"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Config"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"enabled")),(0,r.kt)("td",{parentName:"tr",align:null},"True when the Midi is active")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"sysex")),(0,r.kt)("td",{parentName:"tr",align:null},"True when use the sysex option requesting MIDI access")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"debug")),(0,r.kt)("td",{parentName:"tr",align:null},"True when use debug mode")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"target")),(0,r.kt)("td",{parentName:"tr",align:null},"Raw Midi Event Object")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"device")),(0,r.kt)("td",{parentName:"tr",align:null},"Select MIDI Device Key")))),(0,r.kt)("h2",{id:"midi-config-1"},"MIDI config"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Config"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"enable")),(0,r.kt)("td",{parentName:"tr",align:null},"True when the Midi is active")))),(0,r.kt)("h2",{id:"structure-of-the-config-object"},"Structure of the config object"),(0,r.kt)("p",null,"Depending on whether you suse midi hooks or if you use the ",(0,r.kt)("inlineCode",{parentName:"p"},"useMidi")," hook,\nyou will need to structure the config object differently."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"useFade(state => {}, {...sharedConfig, ...fadeConfig})\n\nuseMidi({fade: state => {}}, {...sharedConfig, fade: fadeConfig})\n")),(0,r.kt)("h2",{id:"binding-special-config"},"Binding special config"),(0,r.kt)("p",null,"You can override config using first argument of bind"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const bind = useNote(() => {}, {channel: 0, note: 0})\nreturn (\n  <div>\n    <button {...bind()} />\n    <button {...bind({note: 1})} />\n    <button {...bind({channel: 1})} />\n    <button {...bind({channel: 1, note: 1})} />\n  </div>\n)\n")))}p.isMDXComponent=!0}}]);