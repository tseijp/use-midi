"use strict";(self.webpackChunk_use_midi_docs=self.webpackChunk_use_midi_docs||[]).push([[438],{63514:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return d},contentTitle:function(){return o},metadata:function(){return s},toc:function(){return p},default:function(){return u}});var a=n(20011),i=n(66017),l=(n(32735),n(29530)),r=["components"],d={sidebar_position:1,sidebar_label:"MIDI"},o="Available midi apis",s={unversionedId:"api/apis",id:"api/apis",isDocsHomePage:!1,title:"Available midi apis",description:"React",source:"@site/documents/api/apis.md",sourceDirName:"api",slug:"/api/apis",permalink:"/use-midi/documents/api/apis",editUrl:"https://github.com/tseijp/use-midi/edit/master/examples/documents/api/apis.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"MIDI"},sidebar:"defaultSidebar",previous:{title:"Introduction",permalink:"/use-midi/documents/intro"},next:{title:"MIDI config",permalink:"/use-midi/documents/api/config"}},p=[{value:"React",id:"react",children:[{value:"Usage",id:"usage",children:[],level:3}],level:2},{value:"Vanilla javascript",id:"vanilla-javascript",children:[{value:"Usage",id:"usage-1",children:[],level:3}],level:2},{value:"Some notes",id:"some-notes",children:[{value:"About Selecting MIDI Device",id:"about-selecting-midi-device",children:[],level:3},{value:"Handling multiple midis at once",id:"handling-multiple-midis-at-once",children:[],level:3}],level:2}],m={toc:p};function u(e){var t=e.components,n=(0,i.Z)(e,r);return(0,l.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"available-midi-apis"},"Available midi apis"),(0,l.kt)("h2",{id:"react"},"React"),(0,l.kt)("p",null,"use-midi exports several hooks and components that can handle different midi:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Hook"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"useFade")),(0,l.kt)("td",{parentName:"tr",align:null},"Handles the fade midi")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"useNote")),(0,l.kt)("td",{parentName:"tr",align:null},"Handles the note midi")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"useTurn")),(0,l.kt)("td",{parentName:"tr",align:null},"Handles the turn midi")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"useMidi")),(0,l.kt)("td",{parentName:"tr",align:null},"Handles multiple midi in the one hooks")))),(0,l.kt)("h3",{id:"usage"},"Usage"),(0,l.kt)("p",null,"With the exception of ",(0,l.kt)("inlineCode",{parentName:"p"},"useMidi")," whitch is a special hook, all other hook share the same API:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const bind = useNote(state => {/*~~~*/}, config)\nreturn <div {...bind()}>\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"state")," is an object containing all attributes of the midi."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"config")," is an object containing options for the midi"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"bind")," is an function for creating event handling objects.")),(0,l.kt)("p",null,"Components is a shorthand for passing hooks directly to children."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'return (\n  <UseNote note={() => {}}>\n    {bind => <div {...bind()}/>}\n  </UseNote>\n)\n// or\nreturn (\n  <UseNote as="div" note={() => {}}/>\n)\n')),(0,l.kt)("h2",{id:"vanilla-javascript"},"Vanilla javascript"),(0,l.kt)("p",null,"use-midi exports several classes tha can handle different midi:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Hook"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Fade")),(0,l.kt)("td",{parentName:"tr",align:null},"Handles the fade midi")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Note")),(0,l.kt)("td",{parentName:"tr",align:null},"Handles the note midi")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Turn")),(0,l.kt)("td",{parentName:"tr",align:null},"Handles the turn midi")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Midi")),(0,l.kt)("td",{parentName:"tr",align:null},"Handles multiple midi in the one hooks")))),(0,l.kt)("h3",{id:"usage-1"},"Usage"),(0,l.kt)("p",null,"With the exception of midi which is a special hook, all other hooks share the same API:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import {rma, Note} from 'use-midi'\nconst target = rma.inputs.values()[0]\nconst noteMidi = new Note(target, (state) => {/**/})\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"state")," is an object containing all attributes of the midi."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"config")," is an object containing options for the midi")),(0,l.kt)("h2",{id:"some-notes"},"Some notes"),(0,l.kt)("h3",{id:"about-selecting-midi-device"},"About Selecting MIDI Device"),(0,l.kt)("p",null,"From multiple connected midi devices, you need to specify the device."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"useNote(state => {}, {input: midiInput})\nuseNote(state => {}, {input: inputs => inputs[0]})\n")),(0,l.kt)("h3",{id:"handling-multiple-midis-at-once"},"Handling multiple midis at once"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"use-midi")," also allows you to manage different midi at the same time:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"const bind = useMidi({\n    fade: state => {/*~~~*/},\n    note: state => {/*~~~*/},\n    turn: state => {/*~~~*/}\n}, config)\n\nreturn <div {...bind()}/>\n")))}u.isMDXComponent=!0}}]);