(self.webpackChunk_use_midi_docs=self.webpackChunk_use_midi_docs||[]).push([[954],{49466:function(t,e,n){"use strict";n.r(e),n.d(e,{frontMatter:function(){return r},contentTitle:function(){return i},metadata:function(){return p},toc:function(){return d},default:function(){return s}});var l=n(7560),u=n(98283),a=(n(2784),n(30876)),o=["components"],r={},i="TODO",p={unversionedId:"todo",id:"todo",isDocsHomePage:!1,title:"TODO",description:"React SyntheticEvent",source:"@site/documents/todo.mdx",sourceDirName:".",slug:"/todo",permalink:"/use-midi/documents/todo",editUrl:"https://github.com/tseijp/use-midi/edit/master/examples/documents/todo.mdx",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Rmaz",permalink:"/use-midi/documents/rmaz"}},d=[{value:"React SyntheticEvent",id:"react-syntheticevent",children:[]},{value:"Widgets",id:"widgets",children:[]},{value:"Settings",id:"settings",children:[]}],m={toc:d};function s(t){var e=t.components,n=(0,u.Z)(t,o);return(0,a.kt)("wrapper",(0,l.Z)({},m,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"todo"},"TODO"),(0,a.kt)("h2",{id:"react-syntheticevent"},"React SyntheticEvent"),(0,a.kt)("h2",{id:"widgets"},"Widgets"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"onchangevalue: onMIDI x onChange\n\noutputs: onOutput\nM => t => U\nI    h    S\nD    i    E\nI <= s <= R\n    inputs\n    onInput\n")),(0,a.kt)("p",null,"onFader, onFaderInput, onFaderOutput (-----( ))"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"vertical unipolar fader"),(0,a.kt)("li",{parentName:"ul"},"vertical bipolar fader"),(0,a.kt)("li",{parentName:"ul"},"horizontal unipolar fader"),(0,a.kt)("li",{parentName:"ul"},"horizontal bipolar fader")),(0,a.kt)("p",null,"onProgram, onProgramInput, onProgramOutput ","[0]","\nonControl, onControlInput, onControlOutput ","[1]"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"program change"),(0,a.kt)("li",{parentName:"ul"},"cc button")),(0,a.kt)("p",null,"onNote, onNoteInput, onNoteOutput ","[0][0]","[0][0]"," ","[1][2]","[3][4]","\nonNotes, onDrums, onChromaticKey, onScaleKey"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"chromatic keyboard"),(0,a.kt)("li",{parentName:"ul"},"scale keyboard"),(0,a.kt)("li",{parentName:"ul"},"drum grid"),(0,a.kt)("li",{parentName:"ul"},"midi note")),(0,a.kt)("h2",{id:"settings"},"Settings"),(0,a.kt)("p",null,"All"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"MIDI Channel (1 ~ 16)")),(0,a.kt)("p",null,"Controll Change Button"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"CC number"),(0,a.kt)("li",{parentName:"ul"},"On value(~ 127)"),(0,a.kt)("li",{parentName:"ul"},"Off value(0 ~)")),(0,a.kt)("p",null,"CC Button, MIDI Note"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Pad mode (Momentary, Toggle, Trigger)")),(0,a.kt)("p",null,"Keyboard"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Octave (-2 ~ 8)")),(0,a.kt)("p",null,"Program change"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Program number")),(0,a.kt)("p",null,"Drum Grid, MIDI Note"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Note (C, C#, ...B)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"useClick(state => {})\nuseChange(state => {})\n")))}s.isMDXComponent=!0}}]);